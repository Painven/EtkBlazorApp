@using System.Globalization

<tr class="@(!Item.IsChecked ? "disabled-row" : "")">
    <td>
        <input type="checkbox"
               style="display: inline-block;  margin: 2px 6px; vertical-align: middle;"
               checked="@Item.IsChecked" 
               @onchange="@(e => { Item.IsChecked = !Item.IsChecked; Changed(); } )" />
    </td>
    <td>
        <p class="manufacturer-name">@Item.Manufacturer</p>
    </td>

    @if (Item.IsChecked)
    {
        <td>
            <input type="number" class="form-control" 
                   value="@Item.Discount1.ToString("G29", CultureInfo.InvariantCulture)"
                   @onchange="@(e => { Item.Discount1 = decimal.Parse(e.Value.ToString(), CultureInfo.InvariantCulture); Changed(); } )" />
        </td>
        <td>
            <input type="number" class="form-control"
                   value="@Item.Discount2.ToString("G29", CultureInfo.InvariantCulture)"
                   @onchange="@(e => { Item.Discount2 = decimal.Parse(e.Value.ToString(), CultureInfo.InvariantCulture); Changed(); } )" />
        </td>
        <td>
            <select @onchange="@(e => { Item.CurrencyCode = (string)e.Value; Changed(); })" class="form-control">
                @foreach (var currencyCode in currencyCodeList)
                {
                    <option selected="@(currencyCode.Equals(Item.CurrencyCode))" value="@currencyCode">@currencyCode</option>
                }
            </select>
        </td>
    }
    else
    {
        <td></td>
        <td></td>
        <td></td>
    }
</tr>
@if (ShowPriceExample && Item.IsChecked)
{
    <tr class="prikat-price-example-row">
        <td></td>
        <td>Пример цен</td>
        <td>@GetExampleStringPart(1)</td>
        <td>@GetExampleStringPart(2)</td>
        <td></td>
    </tr>
}


@code {

    [Parameter] public PrikatManufacturerDiscountViewModel Item { get; set; }
    [Parameter] public EventCallback ItemChanged { get; set; }
    [CascadingParameter] public bool ShowPriceExample { get; set; }
    [CascadingParameter] public decimal ExamplePrice { get; set; }

    List<string> currencyCodeList = new List<string>(Enum.GetNames(typeof(CurrencyType)));

    private MarkupString GetExampleStringPart(int index)
    {
        decimal priceExample1 = (ExamplePrice * (decimal)(1 + ((decimal)Item.Discount1 / 100)));
        decimal priceExample2 = priceExample1 * (decimal)(1 + ((decimal)Item.Discount2 / 100));

        string sign1 = Math.Sign(Item.Discount1) < 0 ? "-" : "+";
        string sign2 = Math.Sign(Item.Discount2) < 0 ? "-" : "+";

        string part1 = $"{ExamplePrice.ToString("0.##")} {sign1} {Math.Abs(Item.Discount1).ToString("0.##")}% = <strong>{priceExample1.ToString("0.##")}<strong>";
        string part2 = $"{priceExample1.ToString("0.##")} {sign2} {Math.Abs(Item.Discount2).ToString("0.##")}% = <strong>{priceExample2.ToString("0.##")}</strong>";

        if(priceExample2 < priceExample1)
        {
            part2 = part2.Replace("<strong>", "<strong style=\"color: red;\">");
        }

        if(index == 1) { return (MarkupString)part1; }
        if(index == 2) { return (MarkupString)part2; }

        throw new ArgumentOutOfRangeException();
    }

    private void Changed()
    {
        ItemChanged.InvokeAsync();
        StateHasChanged();
    }
}
