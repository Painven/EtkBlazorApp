@inject IManufacturerStorage manufacturerStorage


<select class="form-control" id="dropdown-manufacturer" style="min-width: 150px;@CustomStyle"
        @onchange="OnManufacturerChanged">
    @foreach (var manufacturer in manufacturersSource)
    {
        <option value="@manufacturer.manufacturer_id"
                selected="@(Manufacturer.manufacturer_id == manufacturer.manufacturer_id)">
            @manufacturer.name
        </option>
    }
</select>

@code {
    List<ManufacturerEntity> manufacturersSource = null;

    [Parameter] public EventCallback<ManufacturerEntity> ManufacturerChanged { get; set; }
    [Parameter] public ManufacturerEntity Manufacturer { get; set; }
    [Parameter] public string CustomStyle { get; set; }

    protected override async Task OnInitializedAsync()
    {
        manufacturersSource = await manufacturerStorage.GetManufacturers();
        Manufacturer = manufacturersSource.FirstOrDefault() ?? new ManufacturerEntity();
        await ManufacturerChanged.InvokeAsync(Manufacturer);
    }

    protected void OnManufacturerChanged(ChangeEventArgs e)
    {
        Manufacturer = manufacturersSource.Single(m => m.manufacturer_id == int.Parse(e.Value.ToString()));
        ManufacturerChanged.InvokeAsync(Manufacturer);
    }
}
