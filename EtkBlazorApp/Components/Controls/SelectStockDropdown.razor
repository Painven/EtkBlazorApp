@inject IManufacturerStorage manufacturerStorage


<select class="form-control" id="dropdown-manufacturer" style="min-width: 150px;"
        @onchange="OnStockChanged">
    @foreach (var stock in stocks)
    {
        <option value="@stock.stock_partner_id"
                selected="@(Stock.stock_partner_id == stock.stock_partner_id)">
            @($"{stock.name} ({stock.description})")
        </option>
    }
</select>

@code {
    List<StockPartnerEntity> stocks = null;

    [Parameter] public EventCallback<StockPartnerEntity> StockChanged { get; set; }
    [Parameter] public StockPartnerEntity Stock { get; set; }

    protected override async Task OnInitializedAsync()
    {
        stocks = (await manufacturerStorage.GetStockPartners())
            .OrderBy(s => s.shipment_period)
            .ToList();

        Stock = stocks.FirstOrDefault() ?? new StockPartnerEntity();

        await StockChanged.InvokeAsync(Stock);
    }

    protected async Task OnStockChanged(ChangeEventArgs e)
    {
        Stock = stocks.Single(s => s.stock_partner_id == int.Parse(e.Value.ToString()));
        await StockChanged.InvokeAsync(Stock);
    }
}
