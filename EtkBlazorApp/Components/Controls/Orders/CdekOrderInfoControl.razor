@using EtkBlazorApp.Core.Data.Cdek

<label for="cdek-order-number-field">Номер заказа в личном кабинете СДЭК</label>

<div class="order-cdek-data-container my-2">
    <input type="text"
           class="form-control w-auto"
           id="cdek-order-number-field"
           @bind="CdekOrderNumber" />

    <button class="btn btn-primary"
            @onclick="GetCdekOrderDetails">
        Поиск заказа на СДЭК
    </button>
</div>

@if (cdekOrderDetails is not null)
{
    @if (cdekOrderDetails.statuses != null && cdekOrderDetails.statuses.Any())
    {
        <div class="order-cdek-status-box mb-4">
            @{
                int current = cdekOrderDetails.statuses.Length;
            }
            @foreach (var status in cdekOrderDetails.statuses)
            {
                <div class="cdek-status-item @(status == cdekOrderDetails.statuses.First() ? "cdek-status-item-current" : "")">
                    <p>@status.name</p>
                    <p>@status.ParsedDate</p>
                    <p>@status.city</p>
                </div>
                @if (status != cdekOrderDetails.statuses.Last())
                {
                    <span class="oi oi-arrow-left arrow"></span>
                }
            }
        </div>
    }

    <div class="table-responsive">
        <table class="table table-bordered">
            <tbody>
                <tr>
                    <th class="table-dark" colspan="2">Основные данные</th>
                </tr>
                <tr>
                    <td>Код заказа СДЭК</td>
                    <td>@cdekOrderDetails.cdek_number</td>
                </tr>
                <tr>
                    <td>Примечание</td>
                    <td>@cdekOrderDetails.comment</td>
                </tr>
                <tr>
                    <td>Стоимость доставки</td>
                    <td>@cdekOrderDetails.delivery_detail.delivery_sum.ToString("C0")</td>
                </tr>
                <tr>
                    <td>Общая стоимость</td>
                    <td>@cdekOrderDetails.delivery_detail.total_sum.ToString("C0")</td>
                </tr>
                <tr>
                    <td>Код пункта назначения</td>
                    <td>@cdekOrderDetails.delivery_point</td>
                </tr>
                <tr>
                    <th class="table-dark" colspan="2">Принимающая строна</th>
                </tr>
                <tr>
                    <td>Компания</td>
                    <td>@cdekOrderDetails.recipient.company</td>
                </tr>
                @if (cdekOrderDetails.recipient.company != cdekOrderDetails.recipient.name)
                {
                    <tr>
                        <td>Имя/Название</td>
                        <td>@cdekOrderDetails.recipient.name</td>
                    </tr>
                }
                @if (cdekOrderDetails.recipient.phones != null && cdekOrderDetails.recipient.phones.Any())
                {
                    <tr>
                        <td>Телефоны</td>
                        <td>
                            @foreach (var phone in cdekOrderDetails.recipient.phones)
                            {
                                <span>@phone.number</span>

                                <br />
                            }
                        </td>
                    </tr>
                }
                <tr>
                    <th class="table-dark" colspan="2">Точка назначения</th>
                </tr>
                <tr>
                    <td>Страна</td>
                    <td>@cdekOrderDetails.to_location.country</td>
                </tr>
                <tr>
                    <td>Регион</td>
                    <td>@cdekOrderDetails.to_location.region</td>
                </tr>
                <tr>
                    <td>Город</td>
                    <td>@cdekOrderDetails.to_location.city</td>
                </tr>
                <tr>
                    <td>Адрес</td>
                    <td>@cdekOrderDetails.to_location.address</td>
                </tr>
            </tbody>
        </table>
    </div>
}

<style>
    .order-cdek-data-container {
        display: flex;
        justify-content: center;
        gap: 12px;
    }

    .order-cdek-status-box {
        display: flex;
        justify-content: start;
        gap: 12px;
        flex-wrap: wrap;
    }

        .order-cdek-status-box > div {
            flex: 1 1 20%;
            max-width: 20%;
        }

    .cdek-status-item {
        background-color: #6f7081;
        color: white;
        padding: 10px;
        border-radius: 4px;
        font-weight: bold;
        font-size: 12px;
        display: flex;
        flex-direction: column;
    }

        .cdek-status-item p {
            margin: 2px 2px 4px 2px;
        }

    .cdek-status-item-current {
        background-color: #5da35c;
    }

    .arrow {
        font-size: 24px;
        color: #90978a;
        margin: 2px;
        align-self: center;
    }
</style>



@code {
    private ITransportCompanyApi cdekApi;

    [Parameter] public string CdekOrderNumber { get; set; }

    [Inject] public IToastService Toasts { get; set; }
    [Inject] public IOrderUpdateService Orders { get; set; }
    [Inject] public DeliveryServiceApiManager TkApis { get; set; }
    [Inject] public IToastService Toast { get; set; }

    CdekOrderInfo cdekOrderDetails = null;

    protected override void OnInitialized()
    {
        cdekApi = TkApis.TkApiByName[TransportDeliveryCompany.Cdek];
    }

    protected override async Task OnParametersSetAsync()
    {
        await GetCdekOrderDetails();
    }

    private async Task GetCdekOrderDetails()
    {
        if (string.IsNullOrWhiteSpace(CdekOrderNumber))
        {
            return;
        }

        try
        {
            cdekOrderDetails = await cdekApi.GetOrderInfo(CdekOrderNumber);
        }
        catch (Exception ex)
        {
            Toast.ShowError($"Ошибка запроса данных от ТК СДЭК: {ex.Message}");
        }
    }
}
