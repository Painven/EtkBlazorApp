<div class="prikat-manufacturer-discount-item" style="opacity: @(Item.IsChecked ? "1" : "0.6");">
    <input type="checkbox"
           min="-99" max="999"
           style="display: inline-block;  margin: 2px 6px;"
           @bind="@Item.IsChecked" />
    <p style="display: inline-block; font-size: 20px; color: white; width: 100%">@Item.Manufacturer</p>
    <input type="number"
           class="form-control"
           style="display: inline-block; width: auto; margin: 2px 10px;"
           @bind-value="@Item.Discount1" />
    <input type="number"
           class="form-control"
           style="display: inline-block; width: auto; margin: 2px 10px; "
           @bind-value="@Item.Discount2" />
</div>
@if (Item.IsChecked)
{
    <div>
        <p>Пример наценок для товара стоимостью @exampleStartPrice ye <storng>@exampleString</storng></p>
    </div>
}

@code {

    [Parameter]
    public PrikatManufacturerDiscountViewModel Item { get; set; }

    [Parameter]
    public EventCallback ItemChanged { get; set; }

    decimal exampleStartPrice = 1000;

    string exampleString
    {
        get
        {
            decimal priceExample1 = (exampleStartPrice * (decimal)(1 + ((decimal)Item.Discount1 / 100)));
            decimal priceExample2 = priceExample1 * (decimal)(1 + ((decimal)Item.Discount2 / 100));

            string sign1 = Math.Sign(Item.Discount1) < 0 ? "-" : "+";
            string sign2 = Math.Sign(Item.Discount2) < 0 ? "-" : "+";

            string part1 = $"{exampleStartPrice} {sign1} {Math.Abs(Item.Discount1)}% = {priceExample1.ToString("N")}";
            string part2 = $"{priceExample1} {sign2} {Math.Abs(Item.Discount2)}% = {priceExample2.ToString("N")}";

            return $"[{part1}] | [{part2}]";
        }
    }

    protected override void OnParametersSet()
    {
        Item.PropertyChanged += OnStateChanged;
    }

    private void OnStateChanged(object o, System.ComponentModel.PropertyChangedEventArgs e)
    {
        ItemChanged.InvokeAsync();
        StateHasChanged();
    }
}
