@inherits LayoutComponentBase
@inject IToastService toastService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject MyDbLogger logger
@inject CronTaskManager taskManager

@using System.Globalization

<AuthorizeView>
    <Authorized>
        <div class="sidebar">
            <NavMenu />
        </div>

        <div class="main">
            <div class="top-row px-4">
                <p>
                    <strong>@context.User.Identity.Name</strong>
                    <small style="color: #9e9e9e;">@($"({context.User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.Role).Value})")</small>
                    &nbsp;&nbsp;
                    <a href="/Login" @onclick="LogOut">Выйти</a>
                </p>
            </div>

            <div class="content px-4">
                @Body
            </div>
        </div>

        <Blazored.Toast.BlazoredToasts Position="Blazored.Toast.Configuration.ToastPosition.TopRight"
                                       Timeout="12"
                                       IconType="Blazored.Toast.IconType.Material" />
    </Authorized>
    <NotAuthorized>
        <div class="main">
            <div class="content px-4">
                <EtkBlazorApp.Pages.Login></EtkBlazorApp.Pages.Login>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {

    decimal usd, euro;
    public async Task LogOut()
    {
        await ((MyCustomAuthProvider)AuthenticationStateProvider).LogOutUser();
    }

    protected override void OnInitialized()
    {
        taskManager.OnTaskComplete += (e) => toastService.ShowSuccess($"Задание выполнено: {e.Prefix.ToString()}");
        taskManager.OnTaskError += (e) => toastService.ShowError($"Ошибка выполнения задания: {e.Prefix.ToString()}");
    }

}

