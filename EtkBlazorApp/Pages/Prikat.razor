@page "/prikat"
@attribute [Authorize(Roles = "Administrator, Manager")]
@inject IToastService toastService
@inject ITemplateStorage templateStorage
@inject IManufacturerStorage manufacturerStorage
@inject IJSRuntime js


@if (itemsSource == null)
{
    <LoadingSpinner />
}
else
{
    <img style="height: 100px; margin: 0px auto 40px auto; display: block;" src="image/logotips/vse-instrumenti-logo-big.jpg" class="img-fluid"/>
    <div class="container">
        @if (inProgress)
        {
            <IntermediateProgressBar />
        }
        else
        {
    <div class="row">
        <div class="col-md-6 col-sm-6">
            <button type="button" class="btn btn-vi" style="width: 100%;" 
                    @onclick="GetReport" disabled="@reportButtonDisabled">Скачать выгрузку</button>
        </div>
        <div class="col-md-3 col-sm-3">
            <input type="checkbox" class="form-control" value="@removeEmptyStock" />
            <p style="text-align: center; margin-top: 4px;">Исключить 0 ед.</p>
        </div>
        <div class="col-md-3 col-sm-3">
            <input type="checkbox" class="form-control" @onchange="@((e) => ShowPriceExample = (bool)e.Value)" />
            <p style="text-align: center; margin-top: 4px;">Показать примеры цен</p>
            @if (ShowPriceExample)
            {
                <label for="example-price">Цена для примера</label>
                <input type="number" style="display: inline; margin: 2px;" class="form-control" name="example-price" 
                       @bind-value="ExamplePrice"/>
            }
        </div>
    </div>
        }
        <div class="table-responsive">
            <table class="table">
                <thead class="thead-etk">
                    <tr>
                        <th></th>
                        <th>Производитель</th>
                        <th>Закупочная цена</th>
                        <th>Рекомендуемая цена</th>
                        <th>Валюта выгрузки</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in orderedSource)
                    {
                    <CascadingValue Value="@ShowPriceExample">
                        <CascadingValue Value="@ExamplePrice">
                            <PrikatTemplateItem Item="@item" ItemChanged="@(e => DiscountChanged(item))" />
                        </CascadingValue>
                    </CascadingValue>
                    }
                </tbody>
            </table>
        </div>
    </div>
}
@code {

    List<PrikatManufacturerDiscountViewModel> itemsSource;
    List<PrikatManufacturerDiscountViewModel> orderedSource => itemsSource.OrderByDescending(t => t.IsChecked).ToList();

    [Inject]ReportManager ReportManager { get; set; }
    
    public bool ShowPriceExample { get; set; }
    public decimal ExamplePrice { get; set; } = 1000;

    bool removeEmptyStock = true;
    bool inProgress = false;
    bool reportButtonDisabled => itemsSource == null || itemsSource.All(m => m.IsChecked == false);

    private async Task GetReport()
    {
        inProgress = true;
        StateHasChanged();
        string filePath = System.IO.Path.GetTempFileName() + ".csv";

        await ReportManager.Prikat.Create(filePath, removeEmptyStock);

        await js.InvokeVoidAsync("FileSaveAs", "prikat_report.csv", System.IO.File.ReadAllText(filePath));

        inProgress = false;
        System.IO.File.Delete(filePath);

    }

    protected override async Task OnInitializedAsync()
    {
        itemsSource = (await templateStorage.GetPrikatTemplates())
        .Select(t => new PrikatManufacturerDiscountViewModel()
        {
            IsChecked = t.enabled,
            Discount1 = t.discount1,
            Discount2 = t.discount2,
            Manufacturer_id = t.manufacturer_id,
            Manufacturer = t.manufacturer_name,
            CurrencyCode = t.currency_code
        })
        .ToList();
    }

    private async Task DiscountChanged(PrikatManufacturerDiscountViewModel vmItem)
    {
        var dbItem = new PrikatReportTemplateEntity()
        {
            manufacturer_id = vmItem.Manufacturer_id,
            discount1 = vmItem.Discount1,
            discount2 = vmItem.Discount2,
            enabled = vmItem.IsChecked,
            currency_code = vmItem.CurrencyCode
        };
        await templateStorage.SavePrikatTemplate(dbItem);

        StateHasChanged();
    }
}

