@page "/order/{id:int}"
@inject IOrderStorage database
@inject IJSRuntime js
@attribute [Authorize(Roles = "Administrator, Manager")]

@if (order == null)
{
    <LoadingSpinner />
}
else
{
    <h1>Детали заказа <button class="btn btn-sm btn-secondary" @onclick="Print"><span class="oi oi-print"></span></button></h1>
    <div class="container-fluid">

        <h3>Основные данные</h3>
        <div class="row order-details-row">
            <div class="col-md-2">
                <p>Номер заказа</p>
                <input type="text" readonly value="#@order.OrderId" class="form-control" />
            </div>
            <div class="col-md-2">
                <p>Дата заказа</p>
                <input type="text" readonly value="@order.DateTime.ToString("g")" class="form-control" />
            </div>
            <div class="col-md-2">
                <p>Заказчик</p>
                <input type="text" readonly value="@order.Customer" class="form-control" />
            </div>
            <div class="col-md-2">
                <p>Город</p>
                <input type="text" readonly value="@order.City" class="form-control" />
            </div>
            <div class="col-md-2">
                <p>Телефон заказчика</p>
                <input type="text" readonly value="@order.CustomerPhoneNumber" class="form-control" />
            </div>
            <div class="col-md-2">
                <p>Email заказчика</p>
                <input type="text" readonly value="@order.CustomerEmail" class="form-control" />
            </div>
        </div>

        <h3>Доставка</h3>
        <div class="row order-details-row">
            <div class="col-md-6">
                <p>Адрес доставки</p>
                <input type="text" readonly value="@order.ShippingAddress" class="form-control" />
            </div>
            <div class="col-md-6">
                <p>Метод доставки</p>
                <input type="text" readonly value="@order.ShippingMethod" class="form-control" />
            </div>
        </div>

        <h3>Оплата</h3>
        <div class="row order-details-row">

            <div class="col-md-12">
                <p>Вид оплаты</p>
                <input type="text" readonly value="@order.PaymentMethod" class="form-control" />
            </div>
        </div>

        <hr style="margin: 20px auto;" />

        <div class="table-responsive">
            <table class="table">
                <thead class="thead-etk">
                    <tr>
                        <th>Производитель</th>
                        <th>Наименование</th>
                        <th>Модель</th>
                        <th>Артикул</th>
                        <th>Цена, за ед.<br /><small>(на момент заказа)</small></th>
                        <th>Количество</th>
                        <th>Сумма</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var detail in order.OrderDetails)
                    {
                        <tr>
                            <td>@detail.Manufacturer</td>
                            <td>
                                <a href="https://etk-komplekt.ru/index.php?route=product/product&product_id=@detail.ProductId"
                                   target="_blank">
                                    @detail.ProductName
                                </a>
                            </td>
                            <td>@detail.Model</td>
                            <td>@detail.Sku</td>
                            <td>@detail.Price.ToString("C0")</td>
                            <td>@detail.Quantity</td>
                            <td>@detail.Sum.ToString("C0")</td>
                        </tr>
                    }
                    <tr style=" border-top: 2px solid #33121933">
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td style="color: red;font-weight: bold;">@order.OrderDetails.Sum(od => od.Quantity)</td>
                        <td style="color: red; font-weight: bold;">@order.TotalPrice.ToString("C0")</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div class="row">
            <div class="col-md-12">
                <p>Комментарий к заказу</p>
                <textarea readonly value="@order.Comment" class="form-control" style="height: auto; width: 100%; margin: auto 20px;" />
            </div>
        </div>
    </div>
}

@code {

    [Parameter]
    public int Id { get; set; }

    OrderViewModel order = null;

    protected override async Task OnInitializedAsync()
    {
        var oe = await database.GetOrderById(Id);
        var detailsEntity = await database.GetOrderDetails(Id);

        var orderData = new OrderViewModel()
        {
            OrderId = oe.order_id.ToString(),
            City = oe.payment_city,
            Customer = oe.payment_firstname,
            DateTime = oe.date_added,
            OrderStatus = oe.order_status,
            TotalPrice = oe.total,
            Comment = oe.comment,
            CustomerEmail = oe.email,
            CustomerPhoneNumber = oe.telephone,
            ShippingAddress = oe.shipping_address_1,
            PaymentMethod = oe.payment_method,
            ShippingMethod = oe.shipping_method,
            OrderDetails = detailsEntity.Select(ode => new OrderDetailsViewModel()
            {
                ProductName = ode.name,
                Model = ode.model,
                Sku = ode.sku,
                Price = ode.price,
                ProductId = ode.product_id,
                Quantity = ode.quantity,
                Manufacturer = ode.manufacturer
            }).ToList()
        };

        order = orderData;
    }

    private async Task Print()
    {
        await js.InvokeVoidAsync("PrintHtml", "<h1>123123</h1>");
    }
}


