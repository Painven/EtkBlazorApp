@using EtkBlazorApp.Components.Controls.Products
@page "/"

<ProductsGridDisplayer Products="@lastAddedProducts" Title="Последние добавленные товары" MaxDisplayCount=4 />
<ProductsGridDisplayer Products="@bestsellerProducts" Title="Наиболее продаваемые товары" MaxDisplayCount=4 />

<h2>Детали обновлений</h2>

@if (updateInfo.Any())
{
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Дата</th>
                    <th>Заголовок</th>
                    <th>Детали</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in updateInfo)
                {
                    <tr>
                        <td>@item.date_time.Date.ToShortDateString()</td>
                        <td>@item.title</td>
                        <td>@item.description</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {

    List<ProductModel> lastAddedProducts = null;
    List<ProductModel> bestsellerProducts = null;
    List<AppUpdateHistoryEntity> updateInfo = new List<AppUpdateHistoryEntity>();

    [Inject] public IMapper Mapper { get; set; }
    [Inject] public IProductStorage ProductStorage { get; set; }
    [Inject] public ILogStorage LogStorage { get; set; }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            lastAddedProducts = Mapper.Map<List<ProductModel>>(await ProductStorage.GetLastAddedProducts(4));
            bestsellerProducts = Mapper.Map<List<ProductModel>>(await ProductStorage.GetBestsellersBySum(4, 31));

            updateInfo = await LogStorage.GetAppUpdateInfo(25);
            StateHasChanged();
        }
    }
}