@page "/marketplace-export/wildberries-feed"
@using EtkBlazorApp.Core.Data.Wildberries
@using EtkBlazorApp.DataAccess.Repositories.Wildberries

<h1>Данные для отладки (просмотр фида который выгружается в Wildberries)</h1>
<p>Всего товаров в списке: <strong>@(products?.Count ?? 0)</strong></p>
@if (products is null)
{
    <LoadingSpinner Text="Загрузка списка"/>
}
else
{
    <pre>
        @(System.Text.Json.JsonSerializer.Serialize(products, new System.Text.Json.JsonSerializerOptions() { WriteIndented = true }))
    </pre>
}

@code {
    [Inject] public WildberriesUpdateService wbUpdateService { get; set; }
    [Inject] public IWildberriesProductRepository repository { get; set; }
    [Inject] public ISettingStorageReader settingsReader { get; set; }

    private List<WildberriesEtkProductUpdateEntry> products = null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            products = await repository.ReadProducts();
            wbUpdateService.AppendMinimumPriceDiscountAndRoundPrice(products);
            StateHasChanged();
        }
    }
}
