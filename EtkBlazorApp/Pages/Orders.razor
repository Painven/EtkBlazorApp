@page "/orders"
@attribute [Authorize(Roles = "Administrator, Manager")]
@inject IOrderStorage _database

<h3>Заказы</h3>

<div class="row">
    <div class="form-inline">
        <label for="order-number">Номер заказа</label>
        <input class="form-control mx-3 my-1" type="text" id="order-number" @bind="numberFilter" />
    </div>
    <div class="form-inline">
        <label for="order-customer">Заказчик</label>
        <input class="form-control mx-3 my-1" type="text" id="order-customer" @bind="cutomerFilter">
    </div>
    <div class="form-inline">
        <label for="order-city">Город</label>
        <input class="form-control mx-3 my-1" type="text" id="order-city" @bind="cityFilter">
    </div>
    <button class="btn btn-primary py-2 px-2 mx-2 my-2" @onclick="@(() => LoadOrders())">Найти</button>
</div>


    <div class="row">
        <table class="table table-hover orders-table" style="width: 100%">
            <thead class="thead-etk">
                <tr>
                    <th>№ заказа</th>
                    <th>Дата | Время</th>
                    <th>Заказчик</th>
                    <th>Город</th>
                    <th>Сумма</th>
                    <th>Детали</th>
                </tr>
            </thead>
            <tbody>
                @if (orders == null)
                {
                    <tr colspan="6"><LoadingSpinner /></tr>
                }
                else
                {
                    @foreach (var order in orders)
                    {
                        <tr class="@(order == newOrder ? "new-order-row" : string.Empty)">
                            <td>@order.OrderId</td>
                            <td>@order.DateTime.ToString("dd.MM.yyyy | HH:mm")</td>
                            <td>@order.Customer</td>
                            <td>@order.City</td>
                            <td>@order.TotalPrice.ToString("C0")</td>
                            <td><a href="/order/@order.OrderId" target="_blank" class="btn btn-info btn-sm"><i class="oi oi-eye"></i></a></td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

<EtkBlazorApp.Components.NewOrdersNotificator NewOrderPushed="@ShowNewOrder" />

@code {
    List<OrderViewModel> orders = null;
    OrderViewModel newOrder = null;

    string numberFilter = null;
    string cityFilter = null;
    string cutomerFilter = null;

    private void ShowNewOrder(OrderViewModel order)
    {
        orders.Insert(0, order);
        newOrder = order;
        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadOrders();
        }
    }

    private async Task LoadOrders()
    {
        orders = null;
        StateHasChanged();

        orders = (await _database.GetLastOrders(100, numberFilter, cityFilter, cutomerFilter))
            .Select(model => new OrderViewModel()
            {
                City = model.payment_city,
                Customer = HttpUtility.HtmlDecode(model.payment_firstname),
                DateTime = model.date_added,
                OrderId = model.order_id.ToString(),
                TotalPrice = model.total,
                OrderStatus = model.order_status
            })
            .ToList();
        StateHasChanged();
    }
}
