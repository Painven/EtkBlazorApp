@page "/order/{id:int}"
@using EtkBlazorApp.Components.Controls.Orders;
@using EtkBlazorAppi.DadataApi
@attribute [Authorize(Roles = "Administrator, Manager")]

@if (order == null)
{
    <LoadingSpinner />
}
else
{
    <h1>
        Детали заказа <strong>@order.OrderId</strong> от @order.DateTime.ToString("dd.MM.yyyy в HH:mm") (@order.DateTime.ToString("dddd"))
        <button class="btn btn-sm btn-warning"
            @onclick="GoToPrintPage">
            <span class="oi oi-print"></span>
        </button>
    </h1>

    <div class="container-fluid" style="padding-bottom: 30px;">

        <div class="row order-details-row">
            <div class="col-md-3">
                <p>Статус заказа</p>
                <div class="d-flex">
                    <OrderStatusDropdown Order="order" CanChangeStatus=true />
                    <button class="btn btn-sm btn-outline-secondary ml-2" @onclick="ShowStatusChangesDialog">
                        <span class="oi oi-list"></span>
                    </button>
                </div>
            </div>
            <div class="col-md-3">
                <p>№ заказа СДЭК</p>
                <input type="text" value="@order.CdekOrderNumber" class="form-control"
                   @onchange="(async e => await ChangeCdekOrderNumber(e.Value.ToString()))" />
            </div>

            <div class="col-md-6">
                <p>Заказчик</p>
                <input type="text" readonly value="@order.Customer" class="form-control" />
            </div>
        </div>
        <div class="row order-details-row">
            <div class="col-md-3">
                <p>Город</p>
                <input type="text" readonly value="@order.City" class="form-control" />
            </div>
            <div class="col-md-3">
                <p>Телефон</p>
                <input type="text" readonly value="@order.CustomerPhoneNumber" class="form-control" />
            </div>
            <div class="col-md-3">
                <p>Email</p>
                <input type="text" readonly value="@order.CustomerEmail" class="form-control" />
            </div>
            <div class="col-md-3">
                <p>ИНН</p>
                <input type="text" readonly value="@order.Inn" class="form-control" />
            </div>
        </div>
        <div class="row order-details-row">
            <div class="col-md-3">
                <p>Вид оплаты</p>
                <input type="text" readonly value="@order.PaymentMethod" class="form-control" />
            </div>
            <div class="col-md-3">
                <p>Метод доставки</p>
                <input type="text" readonly value="@order.ShippingMethod" class="form-control" />
            </div>
            <div class="col-md-6">
                <p>Адрес доставки</p>
                <input type="text" readonly value="@order.ShippingAddress" class="form-control" />
            </div>


        </div>

        <hr style="margin: 20px auto;" />

        <div class="row">
            <div class="col-md-12">
                <div class="table-responsive">
                    <table class="table">
                        <thead class="thead-etk">
                            <tr>
                                <th>Производитель</th>
                                <th>Наименование</th>
                                <th>Модель</th>
                                <th>Артикул</th>
                                <th>Цена, за ед.<br /><small>(на момент заказа)</small></th>
                                <th>Количество</th>
                                <th>Сумма</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var detail in order.OrderDetails)
                            {
                                <tr>
                                    <td>@detail.Manufacturer</td>
                                    <td>
                                        <a href="https://etk-komplekt.ru/index.php?route=product/product&product_id=@detail.ProductId"
                                   target="_blank">
                                            @(HttpUtility.HtmlDecode(detail.ProductName))
                                        </a>
                                    </td>
                                    <td>@(HttpUtility.HtmlDecode(detail.Model))</td>
                                    <td>@detail.Sku</td>
                                    <td>@detail.Price.ToString("C0")</td>
                                    <td>@detail.Quantity</td>
                                    <td>@detail.Sum.ToString("C0")</td>
                                </tr>
                            }
                            @if (order.OrderDetails.Count > 1)
                            {
                                <tr>
                                    <td colspan="5"></td>
                                    <td style="color: red; font-weight: bold;">@order.ProductsTotalQuantity</td>
                                    <td style="color: red; font-weight: bold;">@order.ProductsTotalCost.ToString("C0")</td>
                                </tr>
                            }
                            <tr>
                                <td colspan="5"></td>
                                <td style="color: red; font-weight: bold;">Доставка</td>
                                <td style="color: red; font-weight: bold;">@order.ShipmentCost.ToString("C0")</td>
                            </tr>
                            <tr style="border-top: 2px solid #33121933">
                                <td colspan="5"></td>
                                <td style="color: red; font-weight: bold;">ИТОГО</td>
                                <td style="color: red; font-weight: bold;">@order.TotalPrice.ToString("C0")</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <p>Комментарий к заказу</p>
                        <textarea readonly value="@order.Comment" class="form-control" style="height: 120px; width: 100%; margin: auto 20px;" />
                    </div>
                </div>
            </div>
        </div>

        <hr style="margin: 20px auto;" />

        <OrderDetailsAdditionalTabsControl Order="order" />
    </div>
}

<CustomDataDialog @ref="statusChangesDialog" ConfirmationTitle="История изменения статуса заказа">
    <DialogBody>
        <ul style="list-style-type: none;">
            @foreach (var status in order.StatusChangesHistory.OrderByDescending(s => s.DateAdded))
            {
                <li><span style="color: royalblue;">@status.DateAdded.ToString("dd.MM.yyyy HH:mm")</span> - <strong>@status.StatusName</strong></li>
            }
        </ul>
    </DialogBody>
</CustomDataDialog>
@code {

    [Parameter] public int Id { get; set; }
    [Inject] public IOrderStorage OrderStorage { get; set; }
    [Inject] public IOrderUpdateService OrderUpdateService { get; set; }
    [Inject] public IToastService Toasts { get; set; }
    [Inject] public IJSRuntime Js { get; set; }
    [Inject] public IMapper Mapper { get; set; }
    [Inject] public ICompanyInfoChecker CompanyInfoChecker { get; set; }
    [Inject] public CashPlusPlusLinkGenerator OrderPdfLinkGenerator { get; set; }
    [Inject] public NavigationManager NavManager { get; set; }


    OrderViewModel order = null;
    CustomDataDialog statusChangesDialog;


    protected override async Task OnInitializedAsync()
    {
        var orderData = await OrderStorage.GetOrderById(Id);
        order = Mapper.Map<OrderViewModel>(orderData);
    }

    private async Task GoToPrintPage()
    {
        //Версия на страницу в личном кабинете
        //string printPage = NavManager.Uri + "/print";

        //Версия на страницу из заказа, код генерируется в модуле cash_plusplus
        string printPage = await OrderPdfLinkGenerator.GenerateLink(order.OrderId);
        await Js.InvokeAsync<object>("open", printPage, "_blank");
    }

    private async Task ChangeCdekOrderNumber(string newCode)
    {
        string oldNumber = order.CdekOrderNumber;
        if (oldNumber != newCode)
        {

            order.CdekOrderNumber = newCode;
            await OrderUpdateService.ChangeOrderLinkedCdekOrderNumber(order.OrderId, newCode);

            Toasts.ShowInfo($"Закрепленный номер заказ СДЭК изменен с '{oldNumber}' -> '{newCode}'");
        }
    }

    private void ShowStatusChangesDialog()
    {
        statusChangesDialog.Show();
    }
}


