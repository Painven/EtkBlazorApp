@page "/settings"
@inject IToastService toasts
@attribute [Authorize(Roles = "Administrator")]
@using EtkBlazorApp.Pages.Settings.SettingsTabs;

<div class="btn-group">
    @foreach (var tab in tabData)
    {
        <button class="btn btn-outline-primary @(selectedTab == tab ? "active" : "")"
            @onclick="@(e => selectedTab = tab)">
            @tab.Icon &nbsp; @tab.Title
        </button>
    }
</div>


<button class="btn btn-success float-right"
        @onclick="SaveCurrentTabSettings">
    <span class="oi oi-check"></span>
    Сохранить настройки
</button>

<div class="settings-tab-content container">
    <h2>@selectedTab.Title</h2>
    <CascadingValue Value="selectedTab">
        <UserSettingsTab tabData="@tabData[0]" />
        <MainSettingsControlTab tabData="@tabData[1]" />
        <EmailSettingsTab tabData="@tabData[2]" />
        <MarketplaceSettingsTab tabData="@tabData[3]" />
        <MonobrandSettingsTab tabData="@tabData[4]" />
    </CascadingValue>
</div>

@code {
    public SettingsTabData selectedTab { get; set; }

    List<SettingsTabData> tabData = new List<SettingsTabData>()
    {
        new SettingsTabData() { Title = "Пользователи", Icon = new MarkupString("&#128589;") },
        new SettingsTabData() { Title = "Общие настройки", Icon = new MarkupString("&#128295;") },
        new SettingsTabData() { Title = "Почтовые ящики", Icon = new MarkupString("&#9993;")  },
        new SettingsTabData() { Title = "Маркетплейсы", Icon = new MarkupString("&#128722;") },
        new SettingsTabData() { Title = "Монобренды" , Icon = new MarkupString("&#127760;") }
    };
    protected override void OnInitialized()
    {
        selectedTab = tabData.First();
    }

    private void SaveCurrentTabSettings()
    {
        selectedTab?.SaveButtonClicked?.Invoke();
        toasts.ShowInfo($"{selectedTab.Title}: Настройки сохранены");
    }
}
