@page "/price-list-loaded-data"
@inject PriceListManager priceListManager

@if (data == null)
{
    <LoadingSpinner></LoadingSpinner>
}
else
{
    <div class="container-fluid">
        @foreach (var template in data)
        {
            <h2>@template.Key</h2>
            <div class="table-responsive">
                <table class="table">
                    <thead class="thead-etk">
                        <tr>
                            <th>Производитель</th>
                            <th>Наименование</th>
                            <th>Модель</th>
                            <th>Артикул</th>                     
                            <th>Цена</th>
                            <th>Валюта</th>
                            <th>Количество</th>
                        </tr>
                    </thead>
                    <tbody>
                        <Virtualize Items="template.Value" Context="line" TItem="PriceLine">
                            <ItemContent>
                                <tr @key="line.GetHashCode()">
                                    <td>@line.Manufacturer</td>
                                    <td>@line.Name</td>
                                    <td>@line.Model</td>
                                    <td>@line.Sku</td>
                                    <td>@line.Price.Value.ToString("F2")</td>
                                    <td>@line.Currency</td>
                                    <td>@line.Quantity.Value</td>
                                </tr>
                            </ItemContent>
                            <Placeholder>
                                <tr>Загрузка ...</tr>
                            </Placeholder>
                        </Virtualize>
                    </tbody>
                </table>
            </div>
            <hr />
        }
    </div>
}

@code {

    Dictionary<string, List<PriceLine>> data;

    protected override void OnInitialized()
    {
        data = priceListManager.PriceLines
        .GroupBy(line => line.Template)
        .ToDictionary(x => "Заголовок", x => x.ToList());
    }
}
