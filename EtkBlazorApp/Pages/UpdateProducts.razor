@page "/update-products"
@attribute [Authorize(Roles = "Administrator, Manager")]
@inject IToastService toastService
@inject ISettingStorage setting

<h3>Обновление цен и остатков</h3>



<div class="container-fluid">
    <div class="row">
        <div class="col-md-2">
            <button class="btn btn-success btn-lg" @onclick="UpdateProductsPriceAndStock" disabled="@(priceListManager.PriceLines.Count == 0)">Обновить</button>
        </div>
        <div class="col-md-2">
            <span>
                <input type="checkbox" @bind="clearStockBeforeUpdate" /> &nbsp;&nbsp;Обнулять остатки
            </span>
        </div>
    </div>
</div>

<LoadedPriceListDisplayer></LoadedPriceListDisplayer>


@code {
    bool clearStockBeforeUpdate = false;

    [Inject] PriceListManager priceListManager { get; set; }
    [Inject] UpdateManager databaseManager { get; set; }
    [Inject] ReportManager reportManager { get; set; }

    private async Task UpdateProductsPriceAndStock()
    {
        try
        {

            await databaseManager.UpdatePriceAndStock(priceListManager.PriceLines, clearStockBeforeUpdate);

            toastService.ShowError($"Остатки и цены на сайте (из загруженных прайс-листов) обновлены", "Информация");
        }
        catch (Exception ex)
        {
            toastService.ShowError($"При обновлении данных произошла ошибка\r\n" + ex.Message, "Ошибка обновления");
        }
        finally
        {

        }
    }
}
