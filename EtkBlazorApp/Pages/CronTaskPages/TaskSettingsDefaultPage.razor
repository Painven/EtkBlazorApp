@page "/task-settings/{Prefix}"
@inject ISettingStorage settings
@inject IToastService toasts
@inject ScheduleTaskManager taskManager
@attribute [Authorize(Roles = "Administrator")]

<h3>Настройки задачи</h3>

<div class="container">
    <div class="row">
        <div class="col-md-6 offset-3">
            <form>
                <div class="form-group">
                    <input type="checkbox" class="form-check-input" checked="@(Item.status == 1)" @onchange="@(e => Item.status = (bool)e.Value ? 1 : 0)" />
                    <span style="font-size: 16px; color: olive; margin: 4px; color: @(isActive ? "green" : "lightgray")">@(isActive ? "Включено" : "Выключено")</span>
                </div>
                <div class="form-group">
                    <span>Выполнить в</span>
                    <input type="time" @bind="ExecutionDateTime" class="form-control" />
                </div>
                <div class="btn-group" role="group" aria-label="Basic example" style="width: 100%">
                    <button type="button" style="width: auto;" class="btn btn-primary" @onclick="SaveSettings">Сохранить</button>
                </div>
            </form>
        </div>
    </div>
</div>

@code {
    bool isActive = true;

    private DateTime executionDateTime;
    private DateTime ExecutionDateTime 
    { 
        get => executionDateTime; 
        set
        {
            executionDateTime = value;
            Item.exec_time = executionDateTime.TimeOfDay;
        } 
    }
    
    [Parameter] public string Prefix { get; set; }
    private CronTaskEntity Item { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Item = (await settings.GetCronTasks()).Single(t => t.details_page == Prefix);
    }

    private async Task SaveSettings()
    {
        await settings.UpdateCronTask(Item);
    }
}
