@page "/price-list/edit/{TemplateGuid}"
@page "/price-list/new"

@inject IPriceListTemplateStorage templateStorage
@inject IStockStorage stockStorage
@inject ISettingStorage settings
@inject IToastService toasts
@inject UserLogger logger
@inject NavigationManager navManager
@attribute [Authorize(Roles = "Manager, Administrator")]

@if (sourceTemplate == null)
{
    <LoadingSpinner />
}
else
{
<div class="row justify-content-center">
    <div class="container">
        <EditForm OnValidSubmit="ValidSubmit" Model="sourceTemplate">
            <DataAnnotationsValidator />
            <div class="row my-2">
                <ValidationMessage For="() => sourceTemplate.Image" />
                <div class="mx-auto d-block image-select-container m-1 p-1">
                    <img src="@sourceTemplate.Image" class="rounded image"
                         @onclick="@(e => imageSelectDialog.Show())"
                         style="width: 100%; height: 100%;" />
                </div>
            </div>

            <div class=" form-group">
                <label for="guid-select">GUID</label>
                <select class="form-control" @bind="sourceTemplate.Guid" required id="guid-select">
                    <option value="">Выбрать</option>
                        @if (guidList != null)
                        {
                            @foreach (var attributeGuid in guidList)
                            {
                                <option selected="@(attributeGuid == sourceTemplate.Guid)"
                                disabled="@(alreadyUsedGuids.Contains(attributeGuid) && attributeGuid != sourceTemplate.Guid)"
                                value="@attributeGuid">
                                    @(((alreadyUsedGuids.Contains(attributeGuid) && attributeGuid != sourceTemplate.Guid) ? "занят " : "") +  @attributeGuid)
                                </option>
                            }
                        }
                    </select>
            </div>

            <div class="form-group">
                <label for="title">Заголовок</label>
                <input type="text" @bind="@sourceTemplate.Title" id="title" class="form-control" required />
            </div>

            <div class="form-group">
                <label for="group_name">Группа</label>
                <input type="text" list="group-name" class="form-control" @bind="sourceTemplate.GroupName" required />
                <datalist id="group-name">
                        @if (groupNames != null)
                        {
                            @foreach (var groupName in groupNames)
                            {
                                <option selected="@(groupName == sourceTemplate.GroupName)" value="@groupName">@groupName</option>
                            }
                        }
                    </datalist>
            </div>
            <div class="form-group">
                <label for="stock_name">Связанный склад поставщика</label>
                <SelectStockDropdown @bind-Stock="@linkedStock"/>
            </div>

            @if (sourceTemplate.RemoteUrlMethodId.HasValue)
            {
                <h3>Данные для загрузки прайс-листа</h3>
                <div class="price-list-load-method-box">
                    <div class="form-group">
                        <label for="remote-uri-method">Метод загрузки файла</label>
                        <select class="form-control" @onchange="LoadMethodChanged" id="remote-uri-method">
                            <option value="">Выбрать</option>
                            @foreach (var method in remoteUriLoadMethods)
                            {
                                <option selected="@(sourceTemplate.RemoteUrlMethodId.HasValue && method.id == sourceTemplate.RemoteUrlMethodId)"
                                        value="@method.id">
                                    @method.name
                                </option>
                            }
                        </select>
                    </div>
                    @if (showEmailPatternBox)
                    {
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label for="criteria-subject">Тема письма</label>
                                <input type="text" class="form-control" id="criteria-subject" @bind="sourceTemplate.EmailSearchCriteria_Subject" />
                            </div>
                            <div class="form-group col-md-6">
                                <label for="criteria-sender">Отправитель</label>
                                <input type="text" class="form-control" id="criteria-sender" @bind="sourceTemplate.EmailSearchCriteria_Sender" />
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label for="criteria-filename">Паттерн имени файла</label>
                                <input type="text" class="form-control" id="criteria-filename" @bind="sourceTemplate.EmailSearchCriteria_FileNamePattern" />
                            </div>
                            <div class="form-group col-md-6">
                                <label for="criteria-max-old">Не старее чем (дней)</label>
                                <input type="number" min="0" max="14" class="form-control" id="criteria-max-old" @bind="sourceTemplate.EmailSearchCriteria_MaxAgeInDays" />
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="form-group">
                            <label for="description">Прямая ссылка на скачивание</label>
                            <input type="url" @bind="@sourceTemplate.RemoteUrl" id="remote_url" class="form-control" />
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label for="remote-method-login">Логин</label>
                                <input type="text" class="form-control" id="remote-method-login" @bind="sourceTemplate.Cridentials_Login" />
                            </div>
                            <div class="form-group col-md-6">
                                <label for="remote-method-password">Пароль</label>
                                <input type="password" class="form-control" id="remote-method-password" @bind="sourceTemplate.Cridentials_Password" />
                            </div>
                        </div>
                    }
                    </div>
                }
                else
                {
                    <div class="form-group">
                        <label for="remote-uri-method">Метод загрузки файла</label>
                        <select class="form-control" @onchange="LoadMethodChanged" id="remote-uri-method">
                            <option value="">Выбрать</option>
                            @if (remoteUriLoadMethods != null)
                            {
                                @foreach (var method in remoteUriLoadMethods)
                                {
                                    <option selected="@(sourceTemplate.RemoteUrlMethodId.HasValue && method.id == sourceTemplate.RemoteUrlMethodId)"
                                    value="@method.id">
                                        @method.name
                                    </option>
                                }
                            }
                        </select>
                </div>
            }

            <div class="form-group">
                <input type="checkbox" @bind="@sourceTemplate.Nds" id="nds" class="form-check-inline" />
                <label for="nds">Добавлять к цене НДС</label>
            </div>

            <div class="form-group">
                <label for="discount">Наценка, %</label>
                <input type="number" @bind="@sourceTemplate.Discount" id="discount" class="form-control" />
            </div>

            <div class="form-group">
                <label for="description">Примечание</label>
                <textarea type="text" @bind="@sourceTemplate.Description" id="description" class="form-control" style="height: 60px;" />
            </div>


            <div class="additional-settings" style="display: block;">
                <button type="button"
                        @onclick="@(e => expandedQuantityMap = !expandedQuantityMap)"
                        class="btn expander-button-item @(expandedQuantityMap ? "expanded" : string.Empty)">
                    Нечисловые количества остатков
                </button>
                <div class="expander-content" id="quantity-map-panel" style="display: @(expandedQuantityMap ? "block" : "none")">
                    <div>
                        <p class="pl-template-add-settings-desc">Если в прайс-листе есть неточные значения в словах (например "Да", "В наличии" или другие) то необходимо перечислить каждое такое значение</p>
                        <div>
                            <button type="button" class="btn btn-success" 
                                    disabled="@(string.IsNullOrWhiteSpace(newQuantityMapRecordWord))"
                                    @onclick="AddNewQuantityMapRecord">
                                <span class="oi oi-plus"></span>
                            </button>
                            <input type="text" class="form-control price-list-template-map-control" placeholder="Слово" @bind="newQuantityMapRecordWord" />
                            <strong style="margin: 0px 12px;">=</strong>
                            <input type="number" class="form-control price-list-template-map-control" placeholder="Количество" @bind="newQuantityMapRecordValue" />
                        </div>
                    </div>
                    <hr />
                    @foreach (var qitem in sourceTemplate.QuantityMap)
                    {
                        <div style="margin-top: 8px;">
                            <button type="button" class="btn btn-outline-danger" @onclick="@(e => RemoveQuantityMapRecord(qitem.Key))">
                                <span class="oi oi-minus"></span>
                            </button>
                            <input type="text" class="form-control price-list-template-map-control" readonly value="@qitem.Key" />
                            <strong style="margin: 0px 12px;">=</strong>
                            <input type="number" class="form-control price-list-template-map-control" readonly value="@qitem.Value" />
                        </div>
                    }
                </div>

                <button type="button"
                        @onclick="@(e => expandedManufacturerMap = !expandedManufacturerMap)"
                        class="btn expander-button-item @(expandedManufacturerMap ? "expanded" : string.Empty)">
                    Преобразование названий брендов
                </button>
                <div class="expander-content" id="manufacturer-map-panel" style="display: @(expandedManufacturerMap ? "block" : "none")">
                    <div>
                        <p class="pl-template-add-settings-desc">Название бренда в прайс-листе должно точно соответствовать названию на сайте. Если оно отличается то его необходимо добавить в список и выбрать соответствующее название бренда на сайте (в выпадающем списке)</p>
                        <button type="button" class="btn btn-success"
                                disabled="@addNewManufacturerMapButtonDisabled"
                                @onclick="AddManufacturerMapRecord">
                            <span class="oi oi-plus"></span>
                        </button>
                        <input type="text" class="form-control price-list-template-map-control" placeholder="Слово" @bind="newManufacturerMapRecordWord" />
                        <strong style="margin: 0px 12px;">=</strong>
                        <SelectManufacturerDropdown CustomStyle="display: inline-block; width: 250px;"
                                                    @bind-Manufacturer="newManufacturerMapRecordItem" />
                    </div>
                    <hr />
                    @foreach (var mitem in sourceTemplate.ManufacturerNameMap)
                    {
                    <div style="margin-top: 8px;">
                        <button type="button" class="btn btn-outline-danger" @onclick="@(e => RemoveManufacturerMapRecord(mitem.Key))">
                            <span class="oi oi-minus"></span>
                        </button>
                        <input type="text" class="form-control price-list-template-map-control" readonly value="@mitem.Key" />
                        <strong style="margin: 0px 12px;">=</strong>
                        <input type="text" class="form-control price-list-template-map-control" readonly value="@mitem.Value" />
                    </div>
                    }
                </div>

                <button type="button"
                        @onclick="@(e => expandedSkipList = !expandedSkipList)"
                        class="btn expander-button-item @(expandedSkipList ? "expanded" : string.Empty)">       
                    Список исключения брендов
                </button>
                <div class="expander-content" id="manufacturer-skip-panel" style="display: @(expandedSkipList ? "block" : "none")">
                    <div>
                        <p class="pl-template-add-settings-desc"><strong>Черный список</strong> - выбранный производитель будет пропущен</p>
                        <p class="pl-template-add-settings-desc"><strong>Белый список</strong> - выбранный производитель будет загружен, но все остальные бренды будут пропущены</p>
                        <button type="button" class="btn btn-success"
                                disabled="@skipManufacturerAddNewRecordButtonDisabled"
                                @onclick="AddSkipManufacturerRecord">
                            <span class="oi oi-plus"></span>
                        </button>
                        <SelectManufacturerDropdown CustomStyle="display: inline-block; width: 250px;"
                                                    @bind-Manufacturer="newSkipManufacturerItem" />

                        <strong style="margin: 0px 12px;"></strong>
                        <select @onchange="@(e => newSkipManufacturerListType = Enum.Parse<SkipManufacturerListType>(e.Value.ToString()))"                               
                                class="form-control price-list-template-map-control">
                            <option value="black_list" selected="@(newSkipManufacturerListType == SkipManufacturerListType.black_list)">Черный список</option>
                            <option value="white_list" selected="@(newSkipManufacturerListType == SkipManufacturerListType.white_list)">Белый список</option>
                        </select>
                    </div>
                    <hr />
                    @foreach (var si in sourceTemplate.ManufacturerSkipList)
                    {
                        <div style="margin-top: 8px;">
                            <button type="button" class="btn btn-outline-danger" @onclick="@(e => RemoveSkipManufacturerRecord(si))">
                                <span class="oi oi-minus"></span>
                            </button>
                            <input type="text" class="form-control price-list-template-map-control" readonly value="@si.Name" />
                            <strong style="margin: 0px 12px;">действие</strong>
                            <input type="text" class="form-control price-list-template-map-control" readonly value="@si.ListTypeDescription" />
                        </div>
                    }
                </div>
            </div>

            <AuthorizeView Roles="Administrator" Context="auth_context">
                <div class="row my-2">
                    <div class="col-md-12">
                        @if (!createNew)
                        {
                            <button type="button" class="btn btn-danger float-left" @onclick="@(e => deleteDialog.Show())">
                                <span class="oi oi-x"></span>
                                Удалить данный шаблон
                            </button>
                        }
                        <button type="submit" class="btn btn-success float-right">
                            <span class="oi oi-check"></span>
                            @buttonActionName
                        </button>
                    </div>
                </div>
            </AuthorizeView>
        </EditForm>

    </div>


</div>

    <FtpFileSelectDialog @ref="imageSelectDialog"
                         InitialFolder="/image/price-list-templates"
                         InitialFileName="@sourceTemplate.Image"
                         OnChange="ImageFileChanged"
                         Title="Выбор изображения" />

    <DeleteConfirmDialog ConfirmationChanged="DeleteConfirmChanged"
                         @ref="deleteDialog"
                         ConfirmationMessage="@(() => "Удалить данный шаблон описания для прайс-листа ?")"
                         ConfirmationTitle="Подтвердите удаление" />
}